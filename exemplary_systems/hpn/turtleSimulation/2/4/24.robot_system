<Behaviour>
<robotSystemName>turtleSimulation</robotSystemName>
<agentName>agent</agentName>
<subsystemName>cs</subsystemName>
<subsystemType></subsystemType>
<behaviourName>moveNorth</behaviourName>
<behaviourId>1</behaviourId>
<transitionFunctionPlaceId>1</transitionFunctionPlaceId>
<sendDataPlaceId>2</sendDataPlaceId>
<receiveDataPlaceId>4</receiveDataPlaceId>
<terminalConditionTransitionId>5</terminalConditionTransitionId>
<continueConditionTransitionId>4</continueConditionTransitionId>
<terminalConditionBody> _internalBufferX.data>CS_MAX_ITERATION-_internalBufferY.data </terminalConditionBody>
<errorConditionBody>false</errorConditionBody>
<transitionFunctionBody>/* Partial transition function - name - tf1_1*/

std::cout<<"[MoveNorth] -- Calculating Transition Function"<<std::endl;
_outputBufferDirection.data=GO_NORTH;
if(_internalBufferX.data==0){
	std::cout<<"INCREMENT Y"<<std::endl;
	_internalBufferY.data=_internalBufferY.data+1;
}
									
/* Partial transition function - name - tf1_2*/
 
if(_internalBufferY.data>CS_MAX_ITERATION){
	_internalBufferY.data=0; 
} 
									
/* Partial transition function - name - tf1_3*/

if(_internalBufferX.data>CS_MAX_ITERATION-_internalBufferY.data){
	_internalBufferX.data=0;
}
else{
	_internalBufferX.data=_internalBufferX.data+1;
}
								
</transitionFunctionBody>
<sendDataBody>std::cout<<"[Behaviour moveNorth] -- Sending Data"<<std::endl;</sendDataBody>
<receiveDataBody>std::cout<<"[Behaviour moveNorth] -- Receiving Data"<<std::endl;</receiveDataBody>
</Behaviour>

