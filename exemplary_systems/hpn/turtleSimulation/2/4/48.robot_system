<Behaviour>
<robotSystemName>turtleSimulation</robotSystemName>
<agentName>agent</agentName>
<subsystemName>cs</subsystemName>
<subsystemType></subsystemType>
<behaviourName>moveEast</behaviourName>
<behaviourId>2</behaviourId>
<transitionFunctionPlaceId>1</transitionFunctionPlaceId>
<sendDataPlaceId>2</sendDataPlaceId>
<receiveDataPlaceId>4</receiveDataPlaceId>
<terminalConditionTransitionId>5</terminalConditionTransitionId>
<continueConditionTransitionId>4</continueConditionTransitionId>
<terminalConditionBody>  _moveEastFinished.data==1 </terminalConditionBody>
<errorConditionBody>false</errorConditionBody>
<transitionFunctionBody>/* Partial transition function - name - tf1_1*/


_moveNorthFinished.data=0;
_moveSouthFinished.data=0;
_moveWestFinished.data=0;


if(_isFirst.data==1){
	_isFirst.data=0;	
	_beginMovement.data=1;
}
else{
	_beginMovement.data=1;
}

_desiredAngle.data=GO_EAST_DIRECTION;
_desiredDirection.data=GO_EAST;

if(_moveEastFinished.data==1){
	_beginMovement.data=1;
	_desiredDirection.data=0;
	_isFirst.data=1;
}

std::cout<<"[CS - MOVE EAST]"<<std::endl;
							
</transitionFunctionBody>
<sendDataBody>std::cout<<"[Behaviour moveEast] -- Sending Data"<<std::endl;</sendDataBody>
<receiveDataBody>std::cout<<"[Behaviour moveEast] -- Receiving Data"<<std::endl;</receiveDataBody>
</Behaviour>

