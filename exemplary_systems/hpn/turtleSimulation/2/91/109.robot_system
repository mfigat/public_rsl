<Behaviour>
<robotSystemName>turtleSimulation</robotSystemName>
<agentName>agent</agentName>
<subsystemName>ve</subsystemName>
<subsystemType></subsystemType>
<behaviourName>Rotate</behaviourName>
<behaviourId>1</behaviourId>
<transitionFunctionPlaceId>1</transitionFunctionPlaceId>
<sendDataPlaceId>2</sendDataPlaceId>
<receiveDataPlaceId>4</receiveDataPlaceId>
<terminalConditionTransitionId>5</terminalConditionTransitionId>
<continueConditionTransitionId>4</continueConditionTransitionId>
<terminalConditionBody> _inputBufferDirection.data>0 && _internalBufferInt.data>0 </terminalConditionBody>
<errorConditionBody>false</errorConditionBody>
<transitionFunctionBody>/* Partial transition function - name - tf1_1*/

std::cout<<"[Rotate] -- Calculating Transition Function"<<std::endl;
std::cout<<"Message="<<_inputBufferDirection.data<<std::endl;
if(_inputBufferDirection.data==0) return;
_outputBufferTwist.linear.x=0;
_outputBufferTwist.angular.z=-1.570796;
_internalBufferInt.data=_inputBufferDirection.data;
								
</transitionFunctionBody>
<sendDataBody>std::cout<<"[Behaviour Rotate] -- Sending Data"<<std::endl;</sendDataBody>
<receiveDataBody>std::cout<<"[Behaviour Rotate] -- Receiving Data"<<std::endl;</receiveDataBody>
</Behaviour>

