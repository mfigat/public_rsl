<Subsystem>
<robotSystemName>lwr4</robotSystemName>
<agentName>agent</agentName>
<subsystemName>cs</subsystemName>
<subsystemType>c</subsystemType>
<subsystemIndex>1</subsystemIndex>
<subsystemFrequency>200</subsystemFrequency>
<subsystemIncludeFile>
#include "../../../../my_libs/lwr4_kinematics_dynamics/lwr4_kinematics_dynamics.h"
#include "../../../../my_libs/shared_memory/shared_memory.h"

/* Desired positions */
double x_d=0.56, y_d=0.17, z_d=0.8;
int _iterations2=0;
int _iterations=0;
bool _flag=true;
				</subsystemIncludeFile>
<isNonBlockingMode>0</isNonBlockingMode>
<isInitialStateSpecified>0</isInitialStateSpecified>
<initialStateName>S_Idle</initialStateName>
<initialStateId>0</initialStateId>
<SubsystemStates>
<SubsystemState>
<stateName>S_Idle</stateName>
<stateId>0</stateId>
<behaviourId>0</behaviourId>
<ChildStates>
<ChildState>
<nextStateName>S_MoveTo</nextStateName>
<nextStateId>1</nextStateId>
<initialConditionBody>[ true ]</initialConditionBody>
</ChildState>
</ChildStates>
</SubsystemState>
<SubsystemState>
<stateName>S_MoveTo</stateName>
<stateId>1</stateId>
<behaviourId>1</behaviourId>
<ChildStates>
</ChildStates>
</SubsystemState>
</SubsystemStates>
<Behaviours>
<Behaviour>
<robotSystemName>lwr4</robotSystemName>
<agentName>agent</agentName>
<subsystemName>cs</subsystemName>
<subsystemType></subsystemType>
<behaviourName>Idle</behaviourName>
<behaviourId>0</behaviourId>
<transitionFunctionPlaceId>1</transitionFunctionPlaceId>
<sendDataPlaceId>2</sendDataPlaceId>
<receiveDataPlaceId>4</receiveDataPlaceId>
<terminalConditionTransitionId>5</terminalConditionTransitionId>
<continueConditionTransitionId>4</continueConditionTransitionId>
<terminalConditionBody> true </terminalConditionBody>
<errorConditionBody>false</errorConditionBody>
<transitionFunctionBody>/* Partial transition function - name - tf1_2*/
 
flag.data=1;

</transitionFunctionBody>
<sendDataBody>std::cout<<"[Behaviour Idle] -- Sending Data"<<std::endl;</sendDataBody>
<receiveDataBody>std::cout<<"[Behaviour Idle] -- Receiving Data"<<std::endl;</receiveDataBody>
</Behaviour>
<Behaviour>
<robotSystemName>lwr4</robotSystemName>
<agentName>agent</agentName>
<subsystemName>cs</subsystemName>
<subsystemType></subsystemType>
<behaviourName>MoveTo</behaviourName>
<behaviourId>1</behaviourId>
<transitionFunctionPlaceId>1</transitionFunctionPlaceId>
<sendDataPlaceId>2</sendDataPlaceId>
<receiveDataPlaceId>4</receiveDataPlaceId>
<terminalConditionTransitionId>5</terminalConditionTransitionId>
<continueConditionTransitionId>4</continueConditionTransitionId>
<terminalConditionBody>  false </terminalConditionBody>
<errorConditionBody>false</errorConditionBody>
<transitionFunctionBody>/* Partial transition function - name - tf1_1*/


// calculate next desired x,y,z coordinates
LWR4KinematicsDynamics::calculateNextEndEffectorPosition_Circle_ZY_Plane(_iterations2, _iterations, x_d, y_d, z_d, _flag, 0.3, 0, 0, 0.5);
desired_x.data=x_d;
desired_y.data=y_d;
desired_z.data=z_d;

									
</transitionFunctionBody>
<sendDataBody>std::cout<<"[Behaviour MoveTo] -- Sending Data"<<std::endl;</sendDataBody>
<receiveDataBody>std::cout<<"[Behaviour MoveTo] -- Receiving Data"<<std::endl;</receiveDataBody>
</Behaviour>
</Behaviours>
<InternalBuffers>
<Buffer>
<bufferName>flag</bufferName>
<bufferDataType>std_msgs::Float64</bufferDataType>
<bufferType>0</bufferType>
<connectionName>flag</connectionName>
</Buffer>
</InternalBuffers>
<InputBuffers>
</InputBuffers>
<OutputBuffers>
<Buffer>
<bufferName>desired_x</bufferName>
<bufferDataType>std_msgs::Float64</bufferDataType>
<bufferType>2</bufferType>
<connectionName>desired_x</connectionName>
</Buffer>
<Buffer>
<bufferName>desired_y</bufferName>
<bufferDataType>std_msgs::Float64</bufferDataType>
<bufferType>2</bufferType>
<connectionName>desired_y</connectionName>
</Buffer>
<Buffer>
<bufferName>desired_z</bufferName>
<bufferDataType>std_msgs::Float64</bufferDataType>
<bufferType>2</bufferType>
<connectionName>desired_z</connectionName>
</Buffer>
</OutputBuffers>
</Subsystem>

